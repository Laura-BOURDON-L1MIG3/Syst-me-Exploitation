from maxpar import *

def main():
    # Créer les tâches
    t1 = Task()
    t1.name = "T1"
    t1.writes = ["X"]
    t1.run = runT1

    t2 = Task()
    t2.name = "T2"
    t2.writes = ["Y"]
    t2.run = runT2

    t3 = Task()
    t3.name = "T3"
    t3.writes = ["N"]
    t3.run = runT3

    #tester rightEntry
    t4 = Task()
    t4.name = "T1"  # Nom de tâche identique à t1
    t4.writes = ["Y"]

    t5 = Task()
    t5.name = "T1"
    t5.writes = []  # Aucun domaine d'écriture

    tSomme = Task()
    tSomme.name = "somme"
    tSomme.reads = ["X", "Y"]
    tSomme.writes = ["Z"]
    tSomme.run = runTsomme

    # Créer les systèmes de tâches
    s1 = TaskSystem([t1,t2,t3,tSomme], {"T1": [], "T2": ["T3"], "T3": [], "somme":["T1","T2"]})
    #test rightEntry
    s2 = TaskSystem([t1, t2], {"T1": [], "T2": ["T3"]}) #vérifier la tâche dans getDependencies existe réellement 
    s3 = TaskSystem([t1, t4], {"T1": [], "T4": []}) # vérifier que le nom de tâche n'est pas déjà utilisé
    s4 = TaskSystem([t5], {"T5": []})
    
    # Exécuter les dépendances de tâches
    print(s1.getDependencies("somme"))

    # Exécuter les tâches séquentiellement
    print("Exécution séquentielle des tâches:")
    s1.runSeq()

    # Exécuter les tâches en parallèle
    print("\nExécution en parallèle des tâches:")
    s1.run()

    print("Vérification des entrées du système de tâches s1:")
    s1.rightEntry()
    print("Vérification des entrées du système de tâches s2:")
    s2.rightEntry()
    print("Vérification des entrées du système de tâches s3:")
    s3.rightEntry()
    print("Vérification des entrées du système de tâches s4:")
    s4.rightEntry()

    s1.draw()
    s2.draw()
    s3.draw()
    s4.draw()

if __name__ == "__main__":
    main()
