from maxpar import *

def main():
    # Variables globales utilisées pour la communication entre les tâches
    X = 0
    Y = 0
    Z = 0
    N = 0

    # Fonctions associées pour chaque tâche
    def runT1():
        global X
        X = 1

    def runT2():
        global Y
        Y = 2

    def runT3():
        global N
        N = 5
        
    def runT4():
        global X
        X = Y-2
        
    def runT5():
        global Y
        Y = X+3
        
    def runTsomme():
        global X, Y, Z
        Z = X + Y
        
    # Créer les tâches
    t1 = Task()
    t1.name = "T1"
    t1.writes = ["X"]
    t1.run = runT1

    t2 = Task()
    t2.name = "T2"
    t2.writes = ["Y"]
    t2.run = runT2

    t3 = Task()
    t3.name = "T3"
    t3.writes = ["N"]
    t3.run = runT3

    tSomme = Task()
    tSomme.name = "somme"
    tSomme.reads = ["X","Y"]
    tSomme.writes = ["Z"]
    tSomme.run = runTsomme

    # Créer les systèmes de tâches
    s1 = TaskSystem([t1,t2,t3,tSomme], {"T1": [], "T2": ["T3"], "T3": [], "somme":["T1","T2"]})
    
    # Dépendances de tâches
    print("-------------DEPENDANCIES-------------")
    print(s1.getDependencies(t2))
    print("--------------------------------------")

    print("\n")
    # Exécuter les tâches séquentiellement
    print("---------------RUNSEQ----------------")
    s1.runSeq()
    print("-------------------------------------")

    print("\n")
    # Exécuter les tâches en parallèle
    print("-----------------RUN-----------------")
    s1.run()
    print("-------------------------------------")
    
    print("\n")
    # Coût de run() et runSeq()
    print("---------------PARCOST---------------")
    s1.parCost()
    print("-------------------------------------")
    
    print("\n")
    ######################
    # Vérifier les entrées du sytème de tâches :
    print("-------------RIGHTENTRY-------------")
    s1.rightEntry()
    """
    s2.rightEntry()
    s3.rightEntry()
    s4.rightEntry()"""
    print("-----------------------------------")
    
    print("\n")
    ###################### 
    # Graphe du sytème :
    print("---------------DRAW---------------")
    s1.draw()
    """s2.draw()
    s3.draw()
    s4.draw()"""
    print("----------------------------------")
    
    print("\n")
    # Système déterministe ou non :
    print("------------DETTESTRND------------")
    s1.detTestRnd()
    print("----------------------------------")
    
if __name__ == "__main__":
    main()
